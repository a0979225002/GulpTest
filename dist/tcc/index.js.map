{"version":3,"file":"index.js","sources":["../../Template/BaseTemplate/OverrideComponent.ts"],"sourcesContent":["/**\r\n * @Author XIAO-LI-PIN\r\n * @Description (Override)擴展cc.Component\r\n * @Date 2021-05-28 上午 10:11\r\n * @Version 1.0\r\n */\r\nexport default class OverrideComponent extends cc.Component {\r\n\r\n    /**\r\n     * 保存當前使用中的計時器方法,如果該計時器執行完,會自動清空該方法\r\n     * @type {Array<Function>}\r\n     * @private\r\n     */\r\n    private readonly scheduleTag: Array<Function>;\r\n\r\n    constructor() {\r\n        super();\r\n        this.scheduleTag = new Array<Function>();\r\n    }\r\n\r\n    /**\r\n     * 獲取當前使用中的計時器\r\n     * @returns {Array<Function>}\r\n     */\r\n    protected getScheduleTag(): Array<Function> {\r\n        return this.scheduleTag;\r\n    }\r\n\r\n    /**\r\n     * 獲取當前還尚未釋放的計時器數量\r\n     * @returns {number}\r\n     */\r\n    protected getScheduleAmount(): number {\r\n        return this.scheduleTag.length;\r\n    }\r\n\r\n    /**\r\n     * 可選循環次數計時器,額外新增增加保存使用中的計時器方法,與原版cocos使用上並無差別\r\n     * @param {Function} callback - 返回方法\r\n     * @param {number} interval - 間格時間\r\n     * @param {number} repeat - 重複次數\r\n     * @param {number} delay - 延遲時間\r\n     */\r\n    public schedule(callback: Function, interval?: number, repeat?: number, delay?: number): void {\r\n        super.schedule(this.checkScheduleRepeat(callback, repeat), interval, repeat, delay);\r\n        this.scheduleTag.push(callback);\r\n    }\r\n\r\n    /**\r\n     * 確認當前計時器是否有使用重複次數\r\n     * @protected\r\n     */\r\n    protected checkScheduleRepeat(callback, repeat): Function {\r\n        if (repeat > 0) {\r\n            callback.prototype = () => {\r\n                repeat--;\r\n                if (repeat < 0) this.unschedule(callback);\r\n                callback.apply(this);\r\n            }\r\n        } else {\r\n            return callback;\r\n        }\r\n        return callback.prototype;\r\n    }\r\n\r\n    /**\r\n     * 單次計時器,額外新增增加保存使用中的計時器方法,與原版cocos使用上並無差別\r\n     * @param {Function} callback - 返回方法\r\n     * @param {number} delay - 延遲時間\r\n     */\r\n    public scheduleOnce(callback: Function, delay?: number): void {\r\n        callback.prototype = () => {\r\n            this.unschedule(callback.prototype);\r\n            callback.apply(this);\r\n        }\r\n        this.schedule(callback.prototype, 0, 0, delay);\r\n    }\r\n\r\n    /**\r\n     * 清除單個計時器方法,額外新增刪除使用中的計時器紀錄,與原版cocos使用上並無差別\r\n     * @param {Function} callback - 當初綁定的方法\r\n     */\r\n    public unschedule(callback: Function): void {\r\n        super.unschedule(this.checkScheduleTag(callback));\r\n        let index = this.checkScheduleCallFunIndex(callback);\r\n        if (index > -1) {\r\n            this.scheduleTag.splice(index, 1);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 判斷當前方法是否正在等待計時器callback中\r\n     * @param {Function} callback - 原本綁定該計時器的方法\r\n     * @returns {number} - 返回當前this.getScheduleTag[]執行中的index位置,如果該陣列內無該方法,返回-1\r\n     * @protected\r\n     */\r\n    protected checkScheduleCallFunIndex(callback: Function): number {\r\n        let index: number;\r\n        if (this.getScheduleTag().indexOf(callback) != -1) {\r\n            index = this.scheduleTag.indexOf(callback);\r\n        } else if (this.getScheduleTag().indexOf(callback.prototype) != -1) {\r\n            index = this.scheduleTag.indexOf(callback.prototype);\r\n        } else {\r\n            return -1;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    /**\r\n     * 確認當前該方法以甚麼形式執行的,原型鏈 or 基礎方法\r\n     * @param {Function} callback - 原本綁定該計時器的方法\r\n     * @returns {Function} - 返回當前this.getScheduleTag[]內的該方法,如果該陣列內無該方法,返回undefined\r\n     * @protected\r\n     */\r\n    protected checkScheduleTag(callback: Function): Function {\r\n        let fun: Function = undefined;\r\n        let index = this.checkScheduleCallFunIndex(callback);\r\n        if (index > -1) {\r\n            fun = this.scheduleTag[index];\r\n        }\r\n        return fun;\r\n    }\r\n\r\n    /**\r\n     * 清除當前所有使用中的計時器,額外新增清空計時器數量方法,與原版cocos使用上並無差別\r\n     */\r\n    public unscheduleAllCallbacks(): void {\r\n        super.unscheduleAllCallbacks();\r\n        this.scheduleTag.length = 0;\r\n    }\r\n}"],"names":[],"mappings":"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"}